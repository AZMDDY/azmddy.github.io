(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{444:function(t,e,l){"use strict";l.r(e);var _=l(4),a=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"c-内存管理-linux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-内存管理-linux"}},[t._v("#")]),t._v(" C++内存管理（Linux）")]),t._v(" "),e("blockquote",[e("p",[t._v("内存管理的解法 —— 内存池")])]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://cdn.jsdelivr.net/gh/AZMDDY/imgs/img/image-20220830200254111.png",alt:"image-20220830200254111"}}),t._v(" "),e("h2",{attrs:{id:"一些概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些概念"}},[t._v("#")]),t._v(" 一些概念")]),t._v(" "),e("p",[t._v("CRT : C Runtime Library")]),t._v(" "),e("p",[t._v("**malloc()**分配内存时会有额外的内存开销。")]),t._v(" "),e("p",[t._v("**free()**实现了碎片整合。")]),t._v(" "),e("p",[t._v("new的动作：")]),t._v(" "),e("ol",[e("li",[t._v("operator new\n"),e("ol",[e("li",[t._v("malloc")])])]),t._v(" "),e("li",[t._v("调用构造函数")]),t._v(" "),e("li",[t._v("返回指针")])]),t._v(" "),e("p",[t._v("自定义对象池的好处就是减少额外内存开销（malloc存在额外开销）")]),t._v(" "),e("p",[t._v("new[] / delete[]: 由于内存分配的时候有额外的cookie，所以delete[]就能推断free()几个对象")]),t._v(" "),e("p",[t._v("allocator: std::__pool_alloc")]),t._v(" "),e("p",[t._v("__pool_aloc适用于为size小于128 byte的类型进行的内存申请。")])])}),[],!1,null,null,null);e.default=a.exports}}]);