(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{564:function(s,n,t){"use strict";t.r(n);var a=t(22),r=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"函数入参类型选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数入参类型选择"}},[s._v("#")]),s._v(" 函数入参类型选择")]),s._v(" "),t("blockquote",[t("p",[s._v("计算机在处理符合指令集架构寄存器位宽的类型时，处理效率更高。")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint64_t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FuncInputParam32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint32_t")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint64_t")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint64_t")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint64_t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FuncInputParam16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint8_t")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint16_t")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint64_t")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("这两个函数仅仅是入参类型不相同。我们看一下他们的汇编。")]),s._v(" "),t("div",{staticClass:"language-assembly line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Dump of assembler code for function FuncInputParam32(unsigned int, unsigned long):\n   0x0000555555563d0a <+0>:\tendbr64 \n   0x0000555555563d0e <+4>:\tpush   %rbp\n   0x0000555555563d0f <+5>:\tmov    %rsp,%rbp\n   0x0000555555563d12 <+8>:\tmov    %edi,-0x14(%rbp)   ; 入参a压栈\n   0x0000555555563d15 <+11>:\tmov    %rsi,-0x20(%rbp) ; 入参b压栈\n   0x0000555555563d19 <+15>:\tmov    -0x14(%rbp),%edx ; 写入32位寄存器\n   0x0000555555563d1c <+18>:\tmov    -0x20(%rbp),%rax ; 写入64位寄存器\n   0x0000555555563d20 <+22>:\tadd    %rdx,%rax \t\t\t\t; edx是rdx的低32位\n   0x0000555555563d23 <+25>:\tmov    %rax,-0x8(%rbp)\n   0x0000555555563d27 <+29>:\tmov    -0x8(%rbp),%rax\n   0x0000555555563d2b <+33>:\tpop    %rbp\n   0x0000555555563d2c <+34>:\tretq   \nEnd of assembler dump.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("div",{staticClass:"language-assembly line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Dump of assembler code for function FuncInputParam16(unsigned char, unsigned short):\n   0x0000555555563d2d <+0>:\tendbr64 \n   0x0000555555563d31 <+4>:\tpush   %rbp\n   0x0000555555563d32 <+5>:\tmov    %rsp,%rbp\n   0x0000555555563d35 <+8>:\tmov    %edi,%edx\n   0x0000555555563d37 <+10>:\tmov    %esi,%eax\n   0x0000555555563d39 <+12>:\tmov    %dl,-0x14(%rbp)  ; 入参a压栈\n   0x0000555555563d3c <+15>:\tmov    %ax,-0x18(%rbp)  ; 入参b压栈\n   0x0000555555563d40 <+19>:\tmovzbl -0x14(%rbp),%edx\n   0x0000555555563d44 <+23>:\tmovzwl -0x18(%rbp),%eax\n   0x0000555555563d48 <+27>:\tadd    %edx,%eax        ; 32位寄存器运算\n   0x0000555555563d4a <+29>:\tcltq   \n   0x0000555555563d4c <+31>:\tmov    %rax,-0x8(%rbp)\n   0x0000555555563d50 <+35>:\tmov    -0x8(%rbp),%rax\n   0x0000555555563d54 <+39>:\tpop    %rbp\n   0x0000555555563d55 <+40>:\tretq   \nEnd of assembler dump.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("从这两段汇编上看，就能看出非32位或64位的整形入参，在压栈和运行过程中执行的指令比32位或64位的要多。")]),s._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("ul",[t("li",[s._v("[X86寄存器相关]("),t("a",{attrs:{href:"https://blog.csdn.net/wang010366/article/details/52015264",target:"_blank",rel:"noopener noreferrer"}},[s._v("x86寄存器问题_rax rbx rcx rdx-CSDN博客"),t("OutboundLink")],1),s._v(")")])])])}),[],!1,null,null,null);n.default=r.exports}}]);