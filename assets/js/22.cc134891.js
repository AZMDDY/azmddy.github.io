(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{345:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"cmake-day-8-编译成一个库-利用object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmake-day-8-编译成一个库-利用object"}},[s._v("#")]),s._v(" CMake Day 8 —— 编译成一个库（利用OBJECT）")]),s._v(" "),a("blockquote",[a("p",[s._v("对外发布库时，通常考虑发布少量的库，此时可以收集所有源码编译成一个库，但是不够简洁，可以先编译成OBJECT库，然后再编译成目标文件。")])]),s._v(" "),a("p",[a("strong",[s._v("须知：")])]),s._v(" "),a("p",[s._v("静态库可以视作编译过程的中间文件，因为单独的静态库没有任何作用。动态库则不然，动态库可以视作最终的二进制文件，所以不存在合并动态库。通俗的讲，合并路径有如下几种：")]),s._v(" "),a("ul",[a("li",[s._v("静态库+静态库=静态库")]),s._v(" "),a("li",[s._v("静态库+静态库=可执行文件")]),s._v(" "),a("li",[s._v("静态库+动态库=动态库")])]),s._v(" "),a("p",[s._v("例如有这样一个项目(https://github.com/AZMDDY/cmake-demo/tree/main/cmake-day-8/demo1)：")]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v(".\n├── CMakeLists.txt\n├── dir1\n│   ├── CMakeLists.txt\n│   ├── dir3\n│   │   ├── CMakeLists.txt\n│   │   └── test3.cpp\n│   └── test1.cpp\n└── dir2\n    ├── CMakeLists.txt\n    └── test2.cpp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("如果想将这些源码编译成一个库，有三个办法：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("直接获取这些源码路径，一次性编译成库。")]),s._v(" "),a("div",{staticClass:"language-cmake line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("demo1 "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("STATIC")]),s._v(" ../dir2/test2.cpp ../dir1/test1.cpp ../dir1/dir3/test3.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如上，这仅仅是个demo，在实际项目中不可能采用这样的方法，实际项目也会划分了很多模块，都这样编译放在一起，维护成本太高。")])]),s._v(" "),a("li",[a("p",[s._v("在编译好每个模块后，利用"),a("code",[s._v("ar")]),s._v("命令将多个静态库合并。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ar crsT libdemo1.a libdemo1_test1.a libdemo1_test2.a libdemo1_test3.a\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("​\t\t顺带提一下，静态库合并成动态库的方式如下：")]),s._v(" "),a("div",{staticClass:"language-cmake line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[s._v("g++ -shared -o libdemo1.so -Wl,--whole-archive dir1/libdemo1_test1.a dir1/dir3/libdemo1_test3.a dir2/libdemo1_test2.a -Wl,--no-whole-archive\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[s._v("利用OBJECT将每个模块都编译成OBJECT库，然后再将OBJECT编译成静态库或动态库。")]),s._v(" "),a("div",{staticClass:"language-cmake line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("demo1_test1_obj OBJECT test1.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("demo1_test2_obj OBJECT test2.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("demo1_test3_obj OBJECT test3.cpp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj_demo1 "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("SHARED")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$<")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("TARGET_OBJECTS")]),s._v(":demo1_test1_obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$<")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("TARGET_OBJECTS")]),s._v(":demo1_test2_obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$<")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("TARGET_OBJECTS")]),s._v(":demo1_test3_obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);