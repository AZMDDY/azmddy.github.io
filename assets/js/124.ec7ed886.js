(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{444:function(t,v,_){"use strict";_.r(v);var r=_(4),s=Object(r.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"多机器人协作问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多机器人协作问题"}},[t._v("#")]),t._v(" 多机器人协作问题")]),t._v(" "),v("blockquote",[v("p",[t._v("面对多机器人的任务挑战，如何提高多机器人的工作效率？")]),t._v(" "),v("p",[t._v("场景约束：静态任务")])]),t._v(" "),v("h2",{attrs:{id:"多机器人系统设计与实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多机器人系统设计与实现"}},[t._v("#")]),t._v(" 多机器人系统设计与实现")]),t._v(" "),v("p",[t._v("多机器人系统涉及以下几个模块：")]),t._v(" "),v("ul",[v("li",[t._v("任务分配：静态任务分配、动态任务分配。")])]),t._v(" "),v("h3",{attrs:{id:"任务分配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#任务分配"}},[t._v("#")]),t._v(" 任务分配")]),t._v(" "),v("p",[t._v("任务分配的思路就是把一系列复杂任务拆分为多个简单易行的子任务。")]),t._v(" "),v("p",[t._v("主要分为"),v("strong",[t._v("任务搜索")]),t._v("和"),v("strong",[t._v("协调控制")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("任务搜索")]),t._v("主要是系统决定如何给每个机器人分配搜索任务才能使搜索过程中消耗能力最少，搜索效果最好。研究内容大体包括：个体之间如何合作，任务如何分配，系统有何限制。")]),t._v(" "),v("p",[v("strong",[t._v("协调控制")]),t._v("主要指系统中各部分各层次对合作要提出的自己意见，主要是分配任务之后的下一步骤，目的是确定具体的合作方式以达到效果最优。主要协调的是"),v("strong",[t._v("路径规划")]),t._v("、"),v("strong",[t._v("障碍冲突")]),t._v("、"),v("strong",[t._v("死锁消除")]),t._v("等。")]),t._v(" "),v("p",[v("strong",[t._v("动态任务")]),t._v("：任务信息，环境信息的都会随时产生变化；新任务产生，旧任务删除都是在线完成的；增加或减少机器人数量会改变原有任务的分配结果等。")]),t._v(" "),v("p",[v("strong",[t._v("静态任务")]),t._v("：任务离线生产，机器人的数量和环境都是固定不变。")]),t._v(" "),v("h2",{attrs:{id:"协作通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#协作通信"}},[t._v("#")]),t._v(" 协作通信")]),t._v(" "),v("p",[t._v("通信是系统中机器人了解其他个体的状态、位置和环境信息的基本条件，理想状态下系统中任意两个机器人都可以进行实时通信，使得系统之间实时的交换信息进行协作完成任务。")]),t._v(" "),v("h2",{attrs:{id:"路径规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路径规划"}},[t._v("#")]),t._v(" 路径规划")]),t._v(" "),v("p",[t._v("机器人路径问题，如"),v("strong",[t._v("碰撞")]),t._v("问题、"),v("strong",[t._v("协调配合")]),t._v("问题、"),v("strong",[t._v("路径死锁")]),t._v("、"),v("strong",[t._v("工作代价大")]),t._v("等问题。")]),t._v(" "),v("p",[t._v("多机器人系统的任务分配与路径规划问题有着密切的关系,任务分配是路径规划的基础,它直接影响着路径规划的结果。")]),t._v(" "),v("p",[v("strong",[t._v("求解多移动机器人协同路径规划问题主要涉及到四个方面")]),t._v("，分别是"),v("strong",[t._v("环境建模")]),t._v("、"),v("strong",[t._v("碰撞预测")]),t._v("、"),v("strong",[t._v("启发式规则设计")]),t._v("、"),v("strong",[t._v("路径规划算法研制")]),t._v("。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("环境建模")]),t._v("是将移动机器人的工作环境通过一定的数据结构传到计算机上，并将环境信息准确地呈现出来。")]),t._v(" "),v("li",[v("strong",[t._v("碰撞预测")]),t._v("是指判断机器人与环境中的动态障碍物或两机器人间是否会发生碰撞以及确定碰撞发生时机器人所处的位置。")]),t._v(" "),v("li",[v("strong",[t._v("启发式规则设计")]),t._v("是指如何更好地消解移动机器人间的碰撞冲突，实现多移动机器人协同作业。")]),t._v(" "),v("li",[v("strong",[t._v("路径规划算法")]),t._v("是指如何在当前工作环境中依据路径规划的相应要求快速地为移动机器人寻找到可避碰避障的最优或较优的可行路径。")]),t._v(" "),v("li",[v("strong",[t._v("多机器人追逃问题")]),t._v("：协作多机器人的编队围捕是指一群具有协作机制的机器人，通过一定的编队策略，加以优化算法，成功的围捕目标。同时涉及编队、追捕等算法的研究。")])]),t._v(" "),v("h3",{attrs:{id:"基于搜索地图节点的路径规划算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基于搜索地图节点的路径规划算法"}},[t._v("#")]),t._v(" 基于搜索地图节点的路径规划算法")]),t._v(" "),v("p",[t._v("Dijkstra和 A*算法。")]),t._v(" "),v("h3",{attrs:{id:"基于数学模型的路径规划算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基于数学模型的路径规划算法"}},[t._v("#")]),t._v(" 基于数学模型的路径规划算法")]),t._v(" "),v("p",[t._v("基于数学模型的方法将机器人和环境约束进行建模，用到目标点的代价函数表示路径优劣，代价函数影响因素包括机器人的控制参数、环境的约束、避障安全条件等，而模型变量之间的关系通过等式或不等式约束表示。该方法能将环境和机器人的信息在模型中完整表示，因此得到的路径是当前约束下的最优路径。")]),t._v(" "),v("h3",{attrs:{id:"基于人工智能的路径规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基于人工智能的路径规划"}},[t._v("#")]),t._v(" 基于人工智能的路径规划*")]),t._v(" "),v("p",[t._v("多移动机器人协同路径规划问题是关一个于多性能指标的 NP-Hard 问题，需要解决机器人之间的碰撞冲突问题，寻找到一组可避碰、避障的较优路径，从而使得多移动机器人能够协同作业。")]),t._v(" "),v("h2",{attrs:{id:"预演"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#预演"}},[t._v("#")]),t._v(" 预演")]),t._v(" "),v("h3",{attrs:{id:"方案一-各自为战"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方案一-各自为战"}},[t._v("#")]),t._v(" 方案一 —— 各自为战")]),t._v(" "),v("p",[t._v("每个机器人基于"),v("strong",[t._v("任务策略")]),t._v("（可以相同，也可以不同），根据**路径规划（相同）**计算自己的最优解，然后做碰撞检测，如果发生碰撞，则重新计算。")]),t._v(" "),v("p",[t._v("可以考虑B机器人在A机器人的路径的基础上做路径规划，从源头避免碰撞。缺点：串行，可能导致计算时间过长；没有协作，优点：实现简单。")]),t._v(" "),v("h3",{attrs:{id:"方案二-步步为营"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方案二-步步为营"}},[t._v("#")]),t._v(" 方案二 —— 步步为营")]),t._v(" "),v("h2",{attrs:{id:"参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/gwplovekimi/article/details/103667841",target:"_blank",rel:"noopener noreferrer"}},[t._v("多机器人协作介绍"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=s.exports}}]);