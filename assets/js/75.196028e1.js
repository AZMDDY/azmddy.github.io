(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{398:function(s,a,n){"use strict";n.r(a);var e=n(4),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"valgrind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#valgrind"}},[s._v("#")]),s._v(" Valgrind")]),s._v(" "),a("blockquote",[a("p",[s._v("Valgrind 是一个用于构建动态分析工具的仪器框架。Valgrind 工具可以自动检测许多内存管理和线程错误，并详细分析您的程序。")])]),s._v(" "),a("p",[s._v("Valgrind 工具套件提供了许多调试和分析工具，可帮助您使程序更快、更正确。这些工具中最受欢迎的称为 Memcheck。它可以检测 C 和 C++ 程序中常见的许多与内存相关的错误，这些错误可能导致崩溃和不可预知的行为。")]),s._v(" "),a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("ol",[a("li",[s._v("Valgrind 发行版目前包括七个生产质量工具：一个内存错误检测器、两个线程错误检测器、一个缓存和分支预测分析器、一个调用图生成缓存和分支预测分析器，以及两个不同的堆分析器。")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#memcheck",target:"_blank",rel:"noopener noreferrer"}},[s._v("Memcheck"),a("OutboundLink")],1),s._v("：Memcheck 检测内存管理问题，主要针对 C 和 C++ 程序。当一个程序在 Memcheck 的监督下运行时，所有的内存读写都会被检查，并且对 malloc/new/free/delete 的调用会被拦截。因此，Memcheck 可以检测您的程序是否：")]),s._v(" "),a("ul",[a("li",[s._v("访问它不应该访问的内存（尚未分配的区域、已释放的区域、堆块末尾的区域、堆栈的不可访问区域）。")]),s._v(" "),a("li",[s._v("以危险的方式使用未初始化的值。")]),s._v(" "),a("li",[s._v("泄漏内存。")]),s._v(" "),a("li",[s._v("堆块的错误释放（双重释放，不匹配的释放）。")]),s._v(" "),a("li",[s._v("将重叠的源和目标内存块传递给 memcpy() 和相关函数。")])]),s._v(" "),a("p",[s._v("Memcheck 会在这些错误发生时立即报告，并给出发生错误的源代码行号，以及为到达该行而调用的函数的堆栈跟踪。Memcheck 在字节级别跟踪可寻址性，并在位级别跟踪值的初始化。因此，它可以检测单个未初始化位的使用，并且不会报告位域操作的虚假错误。Memcheck 运行程序的速度比正常速度慢 10--30 倍。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#cachegrind",target:"_blank",rel:"noopener noreferrer"}},[s._v("Cachegrind"),a("OutboundLink")],1),s._v("：Cachegrind 是一个缓存分析器。它对 CPU 中的 I1、D1 和 L2 缓存执行详细模拟，因此可以准确地查明代码中缓存未命中的来源。它通过每个函数、每个模块和整个程序的摘要来识别每行源代码执行的缓存未命中、内存引用和指令的数量。它对用任何语言编写的程序都很有用。Cachegrind 运行程序的速度比正常速度慢 20--100 倍。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#callgrind",target:"_blank",rel:"noopener noreferrer"}},[s._v("Callgrind"),a("OutboundLink")],1),s._v("：它提供了 Cachegrind 所做的所有信息，以及有关调用图的额外信息。它在 3.2.0 版中被折叠到主要的 Valgrind 发行版中。单独提供一个令人惊叹的可视化工具 "),a("a",{attrs:{href:"http://kcachegrind.sourceforge.net/cgi-bin/show.cgi/KcacheGrindIndex",target:"_blank",rel:"noopener noreferrer"}},[s._v("KCachegrind"),a("OutboundLink")],1),s._v("，它可以更好地概述 Callgrind 收集的数据；它还可以用于可视化 Cachegrind 的输出。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#massif",target:"_blank",rel:"noopener noreferrer"}},[s._v("Massif"),a("OutboundLink")],1),s._v("：Massif 是一个堆分析器。它通过定期拍摄程序堆的快照来执行详细的堆分析。它会生成一个图表，显示随时间的堆使用情况，包括有关程序的哪些部分负责最多内存分配的信息。该图由文本或 HTML 文件补充，其中包含用于确定分配最多内存的位置的更多信息。Massif 运行程序的速度比正常速度慢 20 倍。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#helgrind",target:"_blank",rel:"noopener noreferrer"}},[s._v("Helgrind"),a("OutboundLink")],1),s._v("：Helgrind 是一个线程调试器，可以在多线程程序中发现数据竞争。它查找由多个 (POSIX p-) 线程访问的内存位置，但找不到一致使用的 (pthread_mutex_) 锁。这样的位置表明线程之间缺少同步，并且可能导致难以发现的时间相关问题。它对任何使用 pthread 的程序都很有用。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#drd",target:"_blank",rel:"noopener noreferrer"}},[s._v("DRD"),a("OutboundLink")],1),s._v("：DRD 是一种用于检测多线程 C 和 C++ 程序中的错误的工具。该工具适用于任何使用 POSIX 线程原语或使用构建在 POSIX 线程原语之上的线程概念的程序。虽然 Helgrind 可以检测锁定顺序违规，但对于大多数程序，DRD 需要更少的内存来执行其分析。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#dhat",target:"_blank",rel:"noopener noreferrer"}},[s._v("DHAT"),a("OutboundLink")],1),s._v("：DHAT 是用于检查程序如何使用其堆分配的工具。它跟踪分配的块，并检查每个内存访问以找到它是哪个块（如果有的话）。它带有一个 GUI，以方便探索配置文件结果。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#experimental",target:"_blank",rel:"noopener noreferrer"}},[s._v("Experimental Tools"),a("OutboundLink")],1),s._v("：实验性工具，不具体介绍，感兴趣可以去官网了解。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://valgrind.org/info/tools.html#others",target:"_blank",rel:"noopener noreferrer"}},[s._v("Other Tools"),a("OutboundLink")],1),s._v("：其他工具，不具体介绍，感兴趣可以去官网了解。")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[s._v("Valgrind 被设计成尽可能的非侵入性。它直接与现有的可执行文件一起工作。无需重新编译、重新链接或以其他方式修改要检查的程序。")])]),s._v(" "),a("li",[a("p",[s._v("可以使用"),a("code",[s._v("--tool")]),s._v("选项来决定使用哪个Valgrind工具。默认是"),a("code",[s._v("Memcheck")]),s._v("。")])])]),s._v(" "),a("h1",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("p",[s._v("下载地址：https://valgrind.org/downloads/")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://sourceware.org/pub/valgrind/valgrind-3.19.0.tar.bz2\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-jxvf")]),s._v(" valgrind-3.19.0.tar.bz2\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" valgrind-3.19.0\n./configure\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("编译带调试信息"),a("code",[s._v("-g")]),s._v("的程序，以便 Memcheck 的错误消息包含准确的行号。不建议使用"),a("code",[s._v("-O2")]),s._v("编译优化选项，"),a("code",[s._v("-O0")]),s._v("和"),a("code",[s._v("-O1")]),s._v("都OK，但"),a("code",[s._v("-O1")]),s._v("会更快一些。")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("g++ "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-O1")]),s._v(" main.cpp "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" a.out\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("使用"),a("code",[s._v("Memcheck")]),s._v("工具运行你的程序。")])])]),s._v(" "),a("p",[s._v("Memcheck 是默认工具。该"),a("code",[s._v("--leak-check")]),s._v(" 选项打开详细的内存泄漏检测器。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("valgrind --leak-check"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes a.out arg1 arg2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("更多选项，点击官网链接：https://valgrind.org/docs/manual/manual-core.html#manual-core.report")]),s._v(" "),a("p",[s._v("使用"),a("code",[s._v("Memcheck")]),s._v("工具运行程序，会慢很多，会消耗更多的内存。")]),s._v(" "),a("p",[s._v("如果你的程序是长期运行的，使用valgrind工具时，不要使用"),a("code",[s._v("kill -9 pid")]),s._v("来停止程序，应该使用"),a("code",[s._v("kill pid")]),s._v("，以便生成报告。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("valgrind --leak-check"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yes ./a.out\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("报告如下：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("==2225382== Memcheck, a memory error detector\n==2225382== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\n==2225382== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info\n==2225382== Command: ./a.out\n==2225382== \n==2225382== \n==2225382== HEAP SUMMARY:\n==2225382==     in use at exit: 4 bytes in 1 blocks\n==2225382==   total heap usage: 2 allocs, 1 frees, 72,708 bytes allocated\n==2225382== \n==2225382== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1\n==2225382==    at 0x483CFE3: operator new(unsigned long) (vg_replace_malloc.c:422)\n==2225382==    by 0x10919A: Func1() (main.cpp:6)\n==2225382==    by 0x1091AC: main (main.cpp:11)\n==2225382== \n==2225382== LEAK SUMMARY:\n==2225382==    definitely lost: 4 bytes in 1 blocks\n==2225382==    indirectly lost: 0 bytes in 0 blocks\n==2225382==      possibly lost: 0 bytes in 0 blocks\n==2225382==    still reachable: 0 bytes in 0 blocks\n==2225382==         suppressed: 0 bytes in 0 blocks\n==2225382== \n==2225382== For lists of detected and suppressed errors, rerun with: -s\n==2225382== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("==2225382==")]),s._v("：2225382是进程ID。")]),s._v(" "),a("li",[a("code",[s._v("HEAP SUMMARY")]),s._v("：通过这个可以观察有多少栈被分配和释放。下面还有详细的信息表明在哪里没有释放。")]),s._v(" "),a("li",[a("code",[s._v("LEAK SUMMARY")]),s._v("：内存泄漏的摘要。")])])])}),[],!1,null,null,null);a.default=t.exports}}]);