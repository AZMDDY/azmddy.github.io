(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{509:function(a,s,e){"use strict";e.r(s);var n=e(22),_=Object(n.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"cmake-day-3-编译二进制或库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmake-day-3-编译二进制或库"}},[a._v("#")]),a._v(" CMake Day 3 —— 编译二进制或库")]),a._v(" "),e("p",[a._v("我们可以通过"),e("code",[a._v("add_executable")]),a._v("命令来将项目编译成一个二进制文件，通过"),e("code",[a._v("add_library")]),a._v("将项目编译编译成一个库。")]),a._v(" "),e("p",[a._v("项目结构如下：")]),a._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("demo\n​ ├── build\n    ​ └── lib\n    ​ └── bin\n​ ├── CMakeLists.txt\n​ ├── add.h\n​ ├── add.cpp\n​ └── main.cpp\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("div",{staticClass:"language-CMakeLists.txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# CMake的最小版本要求\ncmake_minimum_required(VERSION 3.0.0)\n# 项目名称以及版本号\nproject(demo VERSION 0.1.0)\n\n#启动对C++14标准的支持\nset(CMAKE_CXX_STANDARD 14)\n\n# 显式要求指明支持C++标准\nset(CMAKE_CXX_STANDARD_REQUIRED True)\n\n# 归档静态库到指定目录\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/lib)\n# 归档动态库到指定目录\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/lib)\n# 归档可执行文件到指定目录\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/bin)\n\n#设置可执行程序\nadd_executable(demo main.cpp)\n\n#设置动态库\nadd_library(add SHARED add.cpp)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br")])]),e("h2",{attrs:{id:"add-executable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-executable"}},[a._v("#")]),a._v(" add_executable")]),a._v(" "),e("p",[a._v("语法：")]),a._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("add_executable(&lt;name> [WIN32] [MACOSX_BUNDLE]\n               [EXCLUDE_FROM_ALL]\n               [source1] [source2 ...])\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("名为"),e("code",[a._v("<name>")]),a._v("的可执行文件将会从源文件列表中被构建，其中"),e("code",[a._v("<name>")]),a._v("需要在整个项目中全局唯一，构建出的的实际文件名是基于平台的约定构建的，例如:"),e("code",[a._v("<name>.exe")]),a._v("或者"),e("code",[a._v("<name>")]),a._v("。")]),a._v(" "),e("p",[a._v("默认情况下，可执行文件将会在该项目的构建树目录中被创建。可以通过"),e("code",[a._v("CMAKE_RUNTIME_OUTPUT_DIRECTORY")]),a._v("来改变可执行文件的归档路径。")]),a._v(" "),e("ul",[e("li",[a._v("CMAKE_RUNTIME_OUTPUT_DIRECTORY：是归档可执行文件到指定目录；")])]),a._v(" "),e("p",[e("code",[a._v("WIN32")]),a._v("是指在 Windows 上使用 WinMain 入口点创建可执行文件。\n"),e("code",[a._v("MACOSX_BUNDLE")]),a._v("是指在 macOS 或 IOS 上构建的可执行文件。")]),a._v(" "),e("h2",{attrs:{id:"add-library"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-library"}},[a._v("#")]),a._v(" add_library")]),a._v(" "),e("p",[a._v("语法：")]),a._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("add_library(&lt;name> [STATIC | SHARED | MODULE]\n            [EXCLUDE_FROM_ALL]\n            [&lt;source>...])\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("名为"),e("code",[a._v("<name>")]),a._v("的库将会从源文件列表中被构建，其中"),e("code",[a._v("<name>")]),a._v("需要在整个项目中全局唯一，构建出的的实际文件名是基于平台的约定构建的，例如"),e("code",[a._v("libdemo.a/libdemo.so")]),a._v("或者"),e("code",[a._v("demo.lib/demo.dll")]),a._v("。")]),a._v(" "),e("p",[a._v("通过指定"),e("code",[a._v("STATIC")]),a._v("，"),e("code",[a._v("SHARED")]),a._v("，"),e("code",[a._v("MODULE")]),a._v("来指定要创建库的类型。"),e("code",[a._v("STATIC")]),a._v("是静态库，"),e("code",[a._v("SHARED")]),a._v("是动态库，"),e("code",[a._v("MODULE")]),a._v("是未链接到其它目标的插件，但可以使用"),e("code",[a._v("dlopen")]),a._v("等方式在运行期间被动态加载。")]),a._v(" "),e("p",[a._v("如果没有明确指定库的类型，可以通过"),e("code",[a._v("BUILD_SHARED_LIBS")]),a._v("的值是否为"),e("code",[a._v("ON")]),a._v("来指定库的类型是"),e("code",[a._v("SHARED")]),a._v("还是"),e("code",[a._v("STATIC")]),a._v("，注意：这个参数是全局标志，默认是"),e("code",[a._v("OFF")]),a._v("。")]),a._v(" "),e("p",[a._v("默认情况下，库文件将会在该项目的构建树目录中被创建，例如：项目中需要将不同文件夹中的代码编译成库，构建目录中会生成对于的构建树，库文件就在对应的目录中。但是我们可以通过"),e("code",[a._v("CMAKE_ARCHIVE_OUTPUT_DIRECTORY")]),a._v(","),e("code",[a._v("CMAKE_LIBRARY_OUTPUT_DIRECTORY")]),a._v("参数来改变库文件生成的路径。")]),a._v(" "),e("ul",[e("li",[a._v("CMAKE_ARCHIVE_OUTPUT_DIRECTORY：是归档静态库到指定目录；")]),a._v(" "),e("li",[a._v("CMAKE_LIBRARY_OUTPUT_DIRECTORY: 是归档动态库到指定目录；")])])])}),[],!1,null,null,null);s.default=_.exports}}]);