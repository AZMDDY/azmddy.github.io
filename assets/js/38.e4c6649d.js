(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{361:function(s,t,n){"use strict";n.r(t);var a=n(4),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"bind-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bind-函数"}},[s._v("#")]),s._v(" bind 函数")]),s._v(" "),t("p",[s._v("使用 bind 函数需要包含 functional 头文件，并且 bind 函数位于命名空间 std 中，它的作用正如它的名字那样，"),t("strong",[s._v("捆绑，结合")]),s._v("，对它的使用可以理解为类似于控制变量法。例如：$y_1 = f(x_1,x_2,x_3)$,当$x_1$为一个常量的时候，它就变成了$y_1^1=f(c, x_2, x_3)$,而 bind 函数的作用和这个类似，但更进一步，它会将返回一个函数对象，比如将$y_1->y_1^1的过程变成了y_1->y_2的过程，而y_2=f(x_2,x_3)$。")]),s._v(" "),t("p",[s._v("在使用 bind 函数时，通过绑定参数，返回一个新的函数。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" intb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto")]),s._v(" add1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nstd"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// same as:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// std::cout << add(2, 3);")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("上面的例子展现了利用 bind 函数绑定一个函数的全部参数，如果需要绑定部分参数，则需要是使用到占位符 "),t("strong",[s._v("placeholders")]),s._v(",占位符的表示： "),t("code",[s._v("_n")]),s._v(","),t("code",[s._v("_n")]),s._v("都定义在 placeholders 的命名空间中，而这个命名空间本身定义在 std 名称空间中，所以，这两个命名空间都需要使用。")]),s._v(" "),t("p",[s._v("占位符的作用是在返回的函数对象中参数对原来函数参数的映射。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("placeholders"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 现有一个含有四个参数的f函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c1, c2为定值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过绑定，c1->a, _2->b, c2->c, _1->d;")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto")]),s._v(" g "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" _2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" _1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时g函数: g(_1, _2);")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bind函数将g(_1, _2)映射为f(a, _2, c, _1);")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("X"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// same as:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// f(c1, Y, c2, X);")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("通过上面的例子，可以发现我们可以通过 bind 函数改变参数的顺序。")]),s._v(" "),t("p",[s._v("在默认情况下， bind 的那些不是占位符的参数是被拷贝到 bind 返回的函数对象的，但是呢,有时候绑定的参数类型无法拷贝，或者我们希望以引用方式传递。这时候我们必须使用 ref 函数。")])])}),[],!1,null,null,null);t.default=e.exports}}]);